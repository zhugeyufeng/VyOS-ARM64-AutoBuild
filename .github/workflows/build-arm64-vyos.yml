name: Build VyOS ARM64 Image

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: '发布版本名称(可选)'
        required: false
        default: 'VyOS ARM64 自动构建'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout vyos-build
        uses: actions/checkout@v4
        with:
          repository: vyos/vyos-build
          ref: current
          path: vyos-build

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2

      - name: Install build dependencies
        run: |
          # 更新包索引
          sudo apt-get update
          
          # 安装系统工具
          sudo apt-get install -y qemu-utils parted xz-utils dosfstools squashfs-tools git
          
          # 安装Python依赖
          sudo pip3 install tomli jinja2 gitpython
          
          # 验证工具已安装
          echo "检查必要工具是否已安装:"
          for tool in docker qemu-img parted xz mkfs.vfat mksquashfs git; do
            if command -v $tool >/dev/null 2>&1; then
              echo "$tool: 已安装"
            else
              echo "$tool: 未安装"
            fi
          done
          
          # 验证Python模块已安装
          echo "检查必要Python模块是否已安装:"
          for module in tomli jinja2 git; do
            if python3 -c "import $module" 2>/dev/null; then
              echo "$module: 已安装"
            else
              echo "$module: 未安装"
              exit 1
            fi
          done

      - name: Build ARM64 squashfs (in Docker)
        run: |
          cd vyos-build
          sudo make docker-arm64
          sudo ./configure --architecture arm64
          sudo make image

      - name: Generate version tag
        id: version
        run: echo "tag=vyos-arm64-$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

      - name: Package to bootable disk image
        run: |
          # 确保构建脚本存在
          if [ ! -f ./scripts/build_image.sh ]; then
            echo "构建脚本不存在，正在检查目录结构..."
            find . -name "build_image.sh" -type f
            exit 1
          fi
          
          chmod +x ./scripts/build_image.sh
          sudo ./scripts/build_image.sh ./vyos-build/build/*/vyos-*.squashfs

      - name: Upload image to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ inputs.release_name || format('VyOS ARM64 构建 - {0}', steps.version.outputs.tag) }}
          body: |
            VyOS ARM64 自动构建版本 - ${{ steps.version.outputs.tag }}
            
            包含以下文件:
            - vyos-arm64.img - 可直接写入SD卡/eMMC的原始镜像
            - vyos-arm64.qcow2 - QEMU/KVM虚拟机兼容格式
            
            构建时间: ${{ github.event.repository.updated_at }}
          files: |
            vyos-arm64.img
            vyos-arm64.qcow2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Upload image as artifact (optional backup)
        uses: actions/upload-artifact@v4
        with:
          name: vyos-arm64-disk
          path: |
            vyos-arm64.img
            vyos-arm64.qcow2
          retention-days: 7
